% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classifyRain.r
\name{classifyRain}
\alias{classifyRain}
\title{Classify audio files for presence/absence of rain}
\usage{
classifyRain(wav, thresh.vals, freqLo = c(0.6, 4.4), freqHi = c(1.2,
  5.6), t.step = NULL, threshold = c("min", "Q2"), ID = NULL,
  parallel = F)
}
\arguments{
\item{wav}{A vector of wav filenames (including directories)}

\item{thresh.vals}{A matrix or vector of thresholds obtained from \code{getThreshold}}

\item{freqLo}{A numeric vector of Lower frequency cut offs for each band - defaults
to 2 bands (0.6-1.2 kHz and 4.4-5.6 kHz)}

\item{freqHi}{A numeric vector of Higher frequency cut off - defaults to 2 bands: (0.6-1.2 kHz and 4.4-5.6 kHz)}

\item{t.step}{NULL or a numeric vector giving time in seconds in which to divide
longer files. If NULL, it is assumed that all files analysed are suitably short (e.g. 15 s each)
and do not need to be subdivided (see details)}

\item{threshold}{threshold method ("min" or "Q2") default calculated both - see details}

\item{ID}{vector of IDs (character or factor) for each wav file identifying rain status,
e.g. rain or non-rain (optional). This can be used for testing and calculating accuracy metrics.}

\item{parallel}{Logical. Whether to use multicore processing with the parallel package (Windows only)
(must be loaded)}
}
\value{
a dataframe with the following columns: filename (of wav files), ID (if provided),
logical columns with results of each threshold classification. If t.step is not NULL, its value is
included in the data frame attributes
}
\description{
Using thresholds from \code{getThreshold} function, audio files are classified as TRUE/FALSE for
presence of rain using a minimum or quartile based threshold.
}
\details{
This function is based on rain classification techniques in Bedoya... Metcalfe et al... thresholds are calculated
using minimum psd and signal to noise ratio (mean/sd) etc...
}
\examples{
# Get filenames of training data (known rain recordings in wav files). Only five files are used
# here for purposes of this example

train.fn <- list.files(system.file("extdata/rain", package = "hardRain"), "\\\\.wav$", full.names = T)

# Calculate the threshold using default settings - for two frequency bands
trBR <- getThreshold(train.fn)
trBR

# Get the test filenames (10 wav files with rain / non-rain)
test.fn <- list.files(system.file("extdata/test", package = "hardRain"), "\\\\.wav$", full.names = T)

# Classify the test files using the thresholds obtained above
resBR <- classifyRain(test.fn, thresh.vals = trBR)
head(resBR)

# How many files identified as rain/non-rain for each threshold?
lapply(split(resBR, list(resBR$threshold)), function(x) table(x[,"value"]))
}
