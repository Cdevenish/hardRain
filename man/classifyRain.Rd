% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classifyRain.r
\name{classifyRain}
\alias{classifyRain}
\title{Classify audio files for presence/absence of rain

Using thresholds from \code{getThreshold} function, audio files are classified as TRUE/FALSE for
presence of rain using a minimum or quartile based threshold.

This function is based on rain classification techniques in Bedoya... Metcalfe et al... thresholds are calculated
using minimum psd and signal to noise ratio (mean/sd) etc...}
\usage{
classifyRain(wav, t.values, freqLo = c(0.6, 4.4), freqHi = c(1.2, 5.6),
  fn = c("meanspec", "spec"), threshold = c("min", "Q2"), ID = NULL,
  parallel = F)
}
\arguments{
\item{wav}{A vector of wav filenames (including directories)}

\item{freqLo}{a vector of Lower frequency cut offs - defaults to 2 bands (0.6-1.2 kHz and 4.4-5.6 kHz)}

\item{freqHi}{a vector of Higher frequency cut off - defaults to 2 bands: (0.6-1.2 kHz and 4.4-5.6 kHz)}

\item{fn}{a character vector, which seewave function to use: spec or meanspec (see details)}

\item{threshold}{threshold method (one of "min" or "Q2") - see details}

\item{ID}{vector of IDs (character or factor) for each wav file identifying rain status,
e.g. rain or non-rain (optional). This can be used for testing and calculating accuracy metrics.}

\item{parallel}{Logical. Whether to use multicore processing with the parallel package (must be loaded)}
}
\value{
a dataframe with the following columns: filename (of wav files), ID (if provided),
logical columns with results of each threshold classification
}
\description{
Classify audio files for presence/absence of rain

Using thresholds from \code{getThreshold} function, audio files are classified as TRUE/FALSE for
presence of rain using a minimum or quartile based threshold.

This function is based on rain classification techniques in Bedoya... Metcalfe et al... thresholds are calculated
using minimum psd and signal to noise ratio (mean/sd) etc...
}
\examples{
# Get filenames of training data (known rain recordings in wav files). Only five files are used
# here for purposes of this example

train.fn <- list.files(system.file("extdata/rain", package = "hardRain"), "\\\\.wav$", full.names = T)

# Calculate the threshold using default settings - for two frequency bands
trBR <- getThreshold(train.fn, fn = "spec")
trBR

# Get the test filenames (10 wav files with rain / non-rain)
test.fn <- list.files(system.file("extdata/test", package = "hardRain"), "\\\\.wav$", full.names = T)

# Classify the test files using the thresholds obtained above
resBR <- classifyRain(test.fn, t.values = trBR, fn = "spec")
head(resBR)

# How many files identified as rain/non-rain for each frequency band and threshold?
lapply(split(resBR, list(resBR$band, resBR$threshold)), function(x) table(x[,"value"]))
}
